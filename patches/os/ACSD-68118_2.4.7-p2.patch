diff --git a/vendor/magento/module-quote-graph-ql/Model/Resolver/CustomerCart.php b/vendor/magento/module-quote-graph-ql/Model/Resolver/CustomerCart.php
index e8aa8d612c670..95b665bb0fe39 100644
--- a/vendor/magento/module-quote-graph-ql/Model/Resolver/CustomerCart.php
+++ b/vendor/magento/module-quote-graph-ql/Model/Resolver/CustomerCart.php
@@ -1,7 +1,7 @@
 <?php
 /**
- * Copyright Â© Magento, Inc. All rights reserved.
- * See COPYING.txt for license details.
+ * Copyright 2019 Adobe
+ * All Rights Reserved.
  */
 declare(strict_types=1);
 
@@ -12,6 +12,7 @@
 use Magento\Framework\GraphQl\Schema\Type\ResolveInfo;
 use Magento\GraphQl\Model\Query\ContextInterface;
 use Magento\Framework\GraphQl\Exception\GraphQlAuthorizationException;
+use Magento\QuoteGraphQl\Model\Cart\UpdateCartCurrency;
 use Magento\Quote\Model\Cart\CustomerCartResolver;
 
 /**
@@ -24,15 +25,23 @@ class CustomerCart implements ResolverInterface
      */
     private $customerCartResolver;
 
+    /**
+     * @var UpdateCartCurrency
+     */
+    private UpdateCartCurrency $updateCartCurrency;
+
     /**
      * CustomerCart constructor.
      *
      * @param CustomerCartResolver $customerCartResolver
+     * @param UpdateCartCurrency $updateCartCurrency
      */
     public function __construct(
-        CustomerCartResolver $customerCartResolver
+        CustomerCartResolver $customerCartResolver,
+        UpdateCartCurrency $updateCartCurrency
     ) {
         $this->customerCartResolver = $customerCartResolver;
+        $this->updateCartCurrency = $updateCartCurrency;
     }
 
     /**
@@ -50,7 +59,11 @@ public function resolve(Field $field, $context, ResolveInfo $info, array $value
         }
 
         try {
-            $cart = $this->customerCartResolver->resolve($currentUserId);
+            $storeId = (int)$context->getExtensionAttributes()->getStore()->getId();
+            $cart = $this->updateCartCurrency->execute(
+                $this->customerCartResolver->resolve($currentUserId),
+                $storeId
+            );
         } catch (\Exception $e) {
             $cart = null;
         }
