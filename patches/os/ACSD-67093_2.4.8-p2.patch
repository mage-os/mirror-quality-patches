diff --git a/vendor/magento/module-sales-graph-ql/Model/Resolver/CustomerOrders/Query/OrderFilter.php b/vendor/magento/module-sales-graph-ql/Model/Resolver/CustomerOrders/Query/OrderFilter.php
index bef914efc8e1..dbb792e70491 100644
--- a/vendor/magento/module-sales-graph-ql/Model/Resolver/CustomerOrders/Query/OrderFilter.php
+++ b/vendor/magento/module-sales-graph-ql/Model/Resolver/CustomerOrders/Query/OrderFilter.php
@@ -1,7 +1,7 @@
 <?php
 /**
- * Copyright Â© Magento, Inc. All rights reserved.
- * See COPYING.txt for license details.
+ * Copyright 2020 Adobe
+ * All Rights Reserved.
  */
 declare(strict_types=1);
 
@@ -40,15 +40,11 @@ class OrderFilter
     private $filterGroupBuilder;
 
     /**
-     * @param ScopeConfigInterface $scopeConfig
      * @param FilterBuilder $filterBuilder
      * @param FilterGroupBuilder $filterGroupBuilder
      * @param string[] $fieldTranslatorArray
-     *
-     * @SuppressWarnings(PHPMD.UnusedFormalParameter)
      */
     public function __construct(
-        ScopeConfigInterface $scopeConfig,
         FilterBuilder $filterBuilder,
         FilterGroupBuilder $filterGroupBuilder,
         array $fieldTranslatorArray = []
@@ -75,7 +71,6 @@ public function createFilterGroups(
         array $storeIds
     ): array {
         $filterGroups = [];
-        $filter = [];
         $this->filterGroupBuilder->setFilters(
             [$this->filterBuilder->setField('customer_id')->setValue($userId)->setConditionType('eq')->create()]
         );
@@ -92,6 +87,7 @@ public function createFilterGroups(
                 if (isset($this->fieldTranslatorArray[$field])) {
                     $field = $this->fieldTranslatorArray[$field];
                 }
+                $filters = [];
                 foreach ($cond as $condType => $value) {
                     if ($condType === 'match') {
                         if (is_array($value)) {
@@ -108,12 +104,14 @@ public function createFilterGroups(
                             ->setConditionType($condType)
                             ->create();
                     }
+                    $filters[] = $filter;
                 }
 
-                $this->filterGroupBuilder->setFilters([$filter]);
+                $this->filterGroupBuilder->setFilters($filters);
                 $filterGroups[] = $this->filterGroupBuilder->create();
             }
         }
+
         return $filterGroups;
     }
 }

