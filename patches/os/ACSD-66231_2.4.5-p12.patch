diff --git a/vendor/magento/module-directory/Model/Currency.php b/vendor/magento/module-directory/Model/Currency.php
index 376e04c186606..0ab45b2c9c332 100644
--- a/vendor/magento/module-directory/Model/Currency.php
+++ b/vendor/magento/module-directory/Model/Currency.php
@@ -1,7 +1,7 @@
 <?php
 /**
- * Copyright © Magento, Inc. All rights reserved.
- * See COPYING.txt for license details.
+ * Copyright 2011 Adobe
+ * All Rights Reserved.
  */
 
 namespace Magento\Directory\Model;
@@ -437,10 +437,6 @@ private function formatCurrency(string $price, array $options): string
             $formattedCurrency = preg_replace('/ /u', '', $formattedCurrency, 1);
         }
 
-        if ((array_key_exists(LocaleCurrency::CURRENCY_OPTION_DISPLAY, $options)
-            && $options[LocaleCurrency::CURRENCY_OPTION_DISPLAY] === \Magento\Framework\Currency::NO_SYMBOL)) {
-            $formattedCurrency = str_replace(' ', '', $formattedCurrency);
-        }
 
         // Sanitize data for Arabic currency
         if (str_contains($this->localeResolver->getLocale(), 'ar_') &&
@@ -490,6 +486,8 @@ private function setOptions(array $options): void
         if (array_key_exists(LocaleCurrency::CURRENCY_OPTION_DISPLAY, $options)
             && $options[LocaleCurrency::CURRENCY_OPTION_DISPLAY] === \Magento\Framework\Currency::NO_SYMBOL) {
             $this->numberFormatter->setSymbol(\NumberFormatter::CURRENCY_SYMBOL, '');
+            $this->numberFormatter->setTextAttribute(\NumberFormatter::POSITIVE_PREFIX, '');
+            $this->numberFormatter->setTextAttribute(\NumberFormatter::POSITIVE_SUFFIX, '');
         }
         if (array_key_exists('precision', $options)) {
             $this->numberFormatter->setAttribute(\NumberFormatter::FRACTION_DIGITS, $options['precision']);

