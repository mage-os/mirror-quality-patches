diff --git a/vendor/magento/module-async-order-graph-ql/Model/Cart/PlaceOrderAsync.php b/vendor/magento/module-async-order-graph-ql/Model/Cart/PlaceOrderAsync.php
index 743f68f665b4..5f4dab181865 100644
--- a/vendor/magento/module-async-order-graph-ql/Model/Cart/PlaceOrderAsync.php
+++ b/vendor/magento/module-async-order-graph-ql/Model/Cart/PlaceOrderAsync.php
@@ -1,7 +1,7 @@
 <?php
 /**
- * Copyright Â© Magento, Inc. All rights reserved.
- * See COPYING.txt for license details.
+ * Copyright 2021 Adobe
+ * All Rights Reserved.
  */
 declare(strict_types=1);
 
@@ -19,6 +19,7 @@
 use Magento\Quote\Model\Quote;
 use Magento\Quote\Model\SubmitQuoteValidator;
 use Magento\QuoteGraphQl\Model\Cart\PlaceOrder;
+use Magento\QuoteGraphQl\Model\ErrorMapper;
 
 /**
  * Place order asynchronously if AsyncOrder is enabled
@@ -50,6 +51,11 @@ class PlaceOrderAsync extends PlaceOrder
      */
     private $guestPublisher;
 
+    /**
+     * @var ErrorMapper
+     */
+    private ErrorMapper $errorMapper;
+
     /**
      * @param PaymentMethodManagementInterface $paymentManagement
      * @param CartManagementInterface $cartManagement
@@ -57,6 +63,7 @@ class PlaceOrderAsync extends PlaceOrder
      * @param SubmitQuoteValidator $submitQuoteValidator
      * @param CustomerPublisher $customerPublisher
      * @param GuestPublisher $guestPublisher
+     * @param ErrorMapper $errorMapper
      */
     public function __construct(
         PaymentMethodManagementInterface $paymentManagement,
@@ -64,7 +71,8 @@ public function __construct(
         DeploymentConfig $deploymentConfig,
         SubmitQuoteValidator $submitQuoteValidator,
         CustomerPublisher $customerPublisher,
-        GuestPublisher $guestPublisher
+        GuestPublisher $guestPublisher,
+        ErrorMapper $errorMapper
     ) {
         parent::__construct($paymentManagement, $cartManagement);
         $this->paymentManagement = $paymentManagement;
@@ -72,6 +80,7 @@ public function __construct(
         $this->submitQuoteValidator = $submitQuoteValidator;
         $this->customerPublisher = $customerPublisher;
         $this->guestPublisher = $guestPublisher;
+        $this->errorMapper = $errorMapper;
     }
 
     /**
@@ -112,7 +121,11 @@ public function execute(
         $this->submitQuoteValidator->validateQuote($cart);
 
         if ($paymentMethod === null) {
-            throw new LocalizedException(__('Enter a valid payment method and try again.'));
+            throw new LocalizedException(
+                __('Enter a valid payment method and try again.'),
+                null,
+                $this->errorMapper->getErrorMessageId('Enter a valid payment method and try again')
+            );
         }
 
         if ($userId === 0) {
